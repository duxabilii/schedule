{% import "_includes/forms.twig" as forms %}

{% set action = action ?? value %}
{% set actionTypes = actionTypes ?? craft.schedule.actions.getAllActionTypes() %}

{% if actionTypeOptions is not defined %}
    {% set actionTypeOptions = []  %}
    {% for type in actionTypes %}
        {% set actionTypeOptions = actionTypeOptions|merge([{
            label: create(type).displayName(),
            value: type,
        }]) %}
    {% endfor %}
{% endif %}

{{ forms.selectField({
    label: label ?? 'What to do'|t('schedule'),
    name: 'actionType',
    value: className(action),
    options: actionTypeOptions,
    toggle: true,
}) }}

{% for actionType in actionTypes %}
    {% set isCurrent = (actionType == className(action)) %}
    <div id="{{ actionType|id }}"{% if not isCurrent %} class="hidden"{% endif %}>
        {% if isCurrent %}
            {% include "schedule/_includes/forms/actionSetting.twig" with {action: action} %}
        {% else %}
            <div class="settings-loading">
                <div class="spinner"></div>
            </div>
        {% endif %}
    </div>
{% endfor %}

{% set actionTypeIds = [] %}
{% for actionType in actionTypes %}
    {% if actionType != className(action) %}
        {% set actionTypeIds = actionTypeIds|merge({(actionType): actionType|id}) %}
    {% endif %}
{% endfor %}

{% js %}
var actionTypes = {{ actionTypeIds|json_encode|raw }};
$('select[name=actionType]').on('change', function(value) {
    var actionType = $(this).val();
    if (actionType in actionTypes) {
        var id = '#' + actionTypes[actionType];
        let _cancelToken =  axios.CancelToken.source();
        Craft.sendActionRequest("POST", "schedule/actions/render-settings", {
            cancelToken: _cancelToken.token,
            data: {
                type: actionType,
            },
        }).then(function(response) {
            let $settings = $(response.data.settingsHtml || '');
            $(id).html(response.data.settingsHtml);
            Craft.appendHeadHtml(response.data.headHtml);
            Craft.appendBodyHtml(response.data.bodyHtml);
        })
        delete actionTypes[actionType]
    }
});
{% endjs %}